import asyncio
import random

from colorama import Fore
from telethon import TelegramClient
from telethon.sessions import StringSession
from telethon.tl import types
from telethon.tl.functions.messages import SendReactionRequest

from actions.get_messages import get_messages
from config.config import API_HASH, API_ID


async def send_reaction(session_str: str, channel: str, post_limit: int = 5) -> None:
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–∞–Ω–¥–æ–º–Ω–æ–π —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ –ø–æ—Å—Ç(–≤ —Ç–æ–º —á–∏—Å–ª–µ –ø—É—Å—Ç–∞—è —Ä–µ–∞–∫—Ü–∏—è - –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –±–æ—Ç—ã –ø—Ä–æ–ø—É—Å–∫–∞—é—Ç —Ä–µ–∞–∫—Ü–∏—é).
    """
    async with TelegramClient(StringSession(session_str), API_ID, API_HASH) as client:
        entity = await client.get_entity(channel)
        messages = await get_messages(session_str, entity, limit=post_limit)

        reactions = [
            None,  # –ù–µ—Ç —Ä–µ–∞–∫—Ü–∏–∏
            types.ReactionEmoji(emoticon="üëç"),
            types.ReactionEmoji(emoticon="‚ù§Ô∏è"),
            types.ReactionEmoji(emoticon="üî•"),
            types.ReactionEmoji(emoticon="ü•∞"),
            types.ReactionEmoji(emoticon="üòç"),
            types.ReactionEmoji(emoticon="üëÄ"),
            types.ReactionEmoji(emoticon="‚úçÔ∏è"),
            types.ReactionEmoji(emoticon="ü¶Ñ"),
        ]

        for msg in messages:
            try:
                reaction = random.choice(reactions)
                await client(
                    SendReactionRequest(peer=entity, msg_id=msg.id, reaction=[reaction] if reaction else None)
                )
                print(f"–†–µ–∞–∫—Ü–∏—è {'–ø—É—Å—Ç–∞—è' if not reaction else reaction.emoticon} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –ø–æ—Å—Ç {msg.id}")
                await asyncio.sleep(1)
            except Exception as e:
                print(Fore.RED + f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ –ø–æ—Å—Ç {msg.id}: {str(e)}")
