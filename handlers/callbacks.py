from telethon import events

from config.config import bot
from keyboards.keyboards_menu import keyboard_show_main_menu
from utils.choice_action import choice_view, choice_join, choice_reaction
from utils.state import UserState

# –•—Ä–∞–Ω–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –¥–∞–Ω–Ω—ã–µ
user_state = UserState()


@bot.on(events.NewMessage)
async def handler_action_menu(event):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è.
    """
    user_id = event.sender_id
    text = event.text.strip()
    # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã –≤ —Å–ø–∏—Å–æ–∫
    channel_list = text.split(',')

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é
    if text in ["ü§ù –í—Å—Ç—É–ø–∏—Ç—å –≤ –∫–∞–Ω–∞–ª—ã", "üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å—Ç—ã", "‚ù§Ô∏è –ü–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–µ–∞–∫—Ü–∏–∏", "üìå –°–∫—Ä—ã—Ç—å –º–µ–Ω—é"]:
        if text == "ü§ù –í—Å—Ç—É–ø–∏—Ç—å –≤ –∫–∞–Ω–∞–ª—ã":
            user_state.set_state(user_id, "WAITING_CHANNELS_JOIN")
            await event.respond("–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –∏–ª–∏ id –∫–∞–Ω–∞–ª–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –≤ –ª—é–±–æ–º –≤–∏–¥–µ(t.me/food_healthy_food, https://t.me/food_healthy_food, @food_healthy_food, food_healthy_food, 123456789)")
        elif text == "üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å—Ç—ã":
            user_state.set_state(user_id, "WAITING_CHANNELS_VIEW")
            await event.respond("–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –∏–ª–∏ id –∫–∞–Ω–∞–ª–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –≤ –ª—é–±–æ–º –≤–∏–¥–µ(t.me/food_healthy_food, https://t.me/food_healthy_food, @food_healthy_food, food_healthy_food, 123456789)")
        elif text == "‚ù§Ô∏è –ü–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–µ–∞–∫—Ü–∏–∏":
            user_state.set_state(user_id, "WAITING_CHANNELS_REACTION")
            await event.respond("–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –∏–ª–∏ id –∫–∞–Ω–∞–ª–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –≤ –ª—é–±–æ–º –≤–∏–¥–µ(t.me/food_healthy_food, https://t.me/food_healthy_food, @food_healthy_food, food_healthy_food, 123456789)")
        elif text == "üìå –°–∫—Ä—ã—Ç—å –º–µ–Ω—é":
            await event.respond("–ú–µ–Ω—é —Å–∫—Ä—ã—Ç–æ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '/start' –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞.")

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
    elif user_id in user_state.states:
        current_state = user_state.get_state(user_id)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è "–í—Å—Ç—É–ø–∏—Ç—å –≤ –∫–∞–Ω–∞–ª—ã"
        if current_state == "WAITING_CHANNELS_JOIN":
            user_state.set_data(user_id, "channels_join", channel_list)
            user_state.set_state(user_id, "WAITING_BOTS_LIMIT_JOIN")
            await event.respond("–°–∫–æ–ª—å–∫–æ –±–æ—Ç–æ–≤ –¥–æ–ª–∂–Ω–æ –≤—Å—Ç—É–ø–∏—Ç—å?")
        elif current_state == "WAITING_BOTS_LIMIT_JOIN":
            user_state.set_data(user_id, "bots_limit_join", int(text))
            # –ö–∞–Ω–∞–ª—ã –¥–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è
            channels = user_state.get_data_value(user_id, "channels_join")
            # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–æ—Ç–æ–≤ –¥–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è
            bots_limit = user_state.get_data_value(user_id, "bots_limit_join")

            # –ù–£–ñ–ù–û –ü–†–û–†–ê–ë–û–¢–ê–¢–¨ –ú–û–ú–ï–ù–¢, –ï–°–õ–ò –ë–£–î–£–¢ –û–®–ò–ë–ö–ò –ü–†–ò –í–°–¢–£–ü–õ–ï–ù–ò–ò
            await event.respond(f"–ì–æ—Ç–æ–≤–æ! –ë–æ—Ç–æ–≤ –≤—Å—Ç—É–ø–∏—Ç: {bots_limit} –ö–∞–Ω–∞–ª—ã: {", ".join(channels)}.")
            # –í—Å—Ç—É–ø–∞–µ–º –≤ –∫–∞–Ω–∞–ª—ã
            await choice_join(channels, bots_limit)
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ —É–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
            user_state.clear(user_id)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å—Ç—ã"
        elif current_state == "WAITING_CHANNELS_VIEW":
            user_state.set_data(user_id, "channels_view", channel_list)
            user_state.set_state(user_id, "WAITING_POSTS_LIMIT_VIEW")
            await event.respond("–°–∫–æ–ª—å–∫–æ –ø–æ—Å—Ç–æ–≤ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å?")
        elif current_state == "WAITING_POSTS_LIMIT_VIEW":
            user_state.set_data(user_id, "posts_limit_view", int(text))
            user_state.set_state(user_id, "WAITING_BOTS_LIMIT_VIEW")
            await event.respond("–°–∫–æ–ª—å–∫–æ –±–æ—Ç–æ–≤ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å?")
        elif current_state == "WAITING_BOTS_LIMIT_VIEW":
            user_state.set_data(user_id, "bots_limit_view", int(text))
            # –ö–∞–Ω–∞–ª—ã –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
            channels = user_state.get_data_value(user_id, "channels_view")
            # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
            posts = user_state.get_data_value(user_id, "posts_limit_view")
            # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–æ—Ç–æ–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
            bots_limit = user_state.get_data_value(user_id, "bots_limit_view")
            await event.respond(f"–ì–æ—Ç–æ–≤–æ! –ü–æ—Å—Ç–æ–≤: {posts}. –ë–æ—Ç–æ–≤ –ø—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç: {bots_limit}. –ö–∞–Ω–∞–ª—ã: {", ".join(channels)}")
            # –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º –ø–æ—Å—Ç—ã
            await choice_view(channels, posts, bots_limit)
            user_state.clear(user_id)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è "–ü–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–µ–∞–∫—Ü–∏–∏"
        elif current_state == "WAITING_CHANNELS_REACTION":
            user_state.set_data(user_id, "channels_reaction", channel_list)
            user_state.set_state(user_id, "WAITING_POSTS_LIMIT_REACTION")
            await event.respond("–ù–∞ —Å–∫–æ–ª—å–∫–æ –ø–æ—Å—Ç–æ–≤ –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–µ–∞–∫—Ü–∏–∏?")
        elif current_state == "WAITING_POSTS_LIMIT_REACTION":
            user_state.set_data(user_id, "posts_limit_reaction", int(text))
            user_state.set_state(user_id, "WAITING_BOTS_LIMIT_REACTION")
            await event.respond("–°–∫–æ–ª—å–∫–æ –±–æ—Ç–æ–≤ –¥–æ–ª–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–µ–∞–∫—Ü–∏–∏?")
        elif current_state == "WAITING_BOTS_LIMIT_REACTION":
            user_state.set_data(user_id, "bots_limit_reaction", int(text))
            # –ö–∞–Ω–∞–ª—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∞–∫—Ü–∏–π
            channels = user_state.get_data_value(user_id, "channels_reaction")
            # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∞–∫—Ü–∏–π
            posts = user_state.get_data_value(user_id, "posts_limit_reaction")
            # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–æ—Ç–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∞–∫—Ü–∏–π
            bots_limit = user_state.get_data_value(user_id, "bots_limit_reaction")
            await event.respond((f"–ì–æ—Ç–æ–≤–æ! –ü–æ—Å—Ç–æ–≤: {posts}. –ë–æ—Ç–æ–≤ –ø–æ—Å—Ç–∞–≤–∏—Ç: {bots_limit}. –ö–∞–Ω–∞–ª—ã: {", ".join(channels)}"))
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∞–∫—Ü–∏–∏
            await choice_reaction(channels, posts, bots_limit)
            user_state.clear(user_id)
    # –ï—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ
    else:
        await keyboard_show_main_menu(event)
